{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NoPassword\\\\Desktop\\\\dispatchAndEatery\\\\client\\\\src\\\\component\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  useEffect(() => {\n    // Get user's location using Geolocation API\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          latitude,\n          longitude\n        });\n      }, error => {\n        console.error('Error getting user location:', error);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  }, []); // Run once when the component mounts\n\n  useEffect(() => {\n    // Display Mapbox map\n    if (userLocation) {\n      mapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\n      const map = new mapboxgl.Map({\n        container: 'map',\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [userLocation.longitude, userLocation.latitude],\n        zoom: 12\n      });\n\n      // Add a marker at the user's location\n      new mapboxgl.Marker().setLngLat([userLocation.longitude, userLocation.latitude]).addTo(map);\n      return () => map.remove(); // Cleanup on component unmount\n    }\n  }, [userLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: '100%',\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(Test, \"Y9fzOV/Xjvhq8GrZ1rcFtHinZdA=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","mapboxgl","jsxDEV","_jsxDEV","Test","_s","userLocation","setUserLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","accessToken","map","Map","container","style","center","zoom","Marker","setLngLat","addTo","remove","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/NoPassword/Desktop/dispatchAndEatery/client/src/component/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nconst Test = () => {\r\n  const [userLocation, setUserLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get user's location using Geolocation API\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setUserLocation({ latitude, longitude });\r\n        },\r\n        (error) => {\r\n          console.error('Error getting user location:', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Geolocation is not supported by this browser.');\r\n    }\r\n  }, []); // Run once when the component mounts\r\n\r\n  useEffect(() => {\r\n    // Display Mapbox map\r\n    if (userLocation) {\r\n      mapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN';\r\n\r\n      const map = new mapboxgl.Map({\r\n        container: 'map',\r\n        style: 'mapbox://styles/mapbox/streets-v11',\r\n        center: [userLocation.longitude, userLocation.latitude],\r\n        zoom: 12\r\n      });\r\n\r\n      // Add a marker at the user's location\r\n      new mapboxgl.Marker().setLngLat([userLocation.longitude, userLocation.latitude]).addTo(map);\r\n\r\n      return () => map.remove(); // Cleanup on component unmount\r\n    }\r\n  }, [userLocation]);\r\n\r\n  return <div id=\"map\" style={{ width: '100%', height: '400px' }}></div>;\r\n};\r\n\r\nexport default Test;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCC,QAAQ,IAAK;QACZ,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/CP,eAAe,CAAC;UAAEK,QAAQ;UAAEC;QAAU,CAAC,CAAC;MAC1C,CAAC,EACAE,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD,CACF,CAAC;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERhB,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,YAAY,EAAE;MAChBL,QAAQ,CAACgB,WAAW,GAAG,0BAA0B;MAEjD,MAAMC,GAAG,GAAG,IAAIjB,QAAQ,CAACkB,GAAG,CAAC;QAC3BC,SAAS,EAAE,KAAK;QAChBC,KAAK,EAAE,oCAAoC;QAC3CC,MAAM,EAAE,CAAChB,YAAY,CAACO,SAAS,EAAEP,YAAY,CAACM,QAAQ,CAAC;QACvDW,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,IAAItB,QAAQ,CAACuB,MAAM,CAAC,CAAC,CAACC,SAAS,CAAC,CAACnB,YAAY,CAACO,SAAS,EAAEP,YAAY,CAACM,QAAQ,CAAC,CAAC,CAACc,KAAK,CAACR,GAAG,CAAC;MAE3F,OAAO,MAAMA,GAAG,CAACS,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC,EAAE,CAACrB,YAAY,CAAC,CAAC;EAElB,oBAAOH,OAAA;IAAKyB,EAAE,EAAC,KAAK;IAACP,KAAK,EAAE;MAAEQ,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxE,CAAC;AAAC7B,EAAA,CAxCID,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}