{"ast":null,"code":"// store.js\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport userInfoReducers from './userSlice';\nimport cartReducer from './cartSlice';\nimport shippingAddressReducers from './shippingSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  user: userInfoReducers,\n  shippingAddress: shippingAddressReducers,\n  search: searchReducers\n\n  // Add more reducers as needed\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n  // Add blacklist or whitelist options if needed\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","userInfoReducers","cartReducer","shippingAddressReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","cart","user","shippingAddress","search","searchReducers","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/NoPassword/Desktop/dispatchAndEatery/client/src/redux/store.js"],"sourcesContent":["// store.js\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport userInfoReducers from './userSlice';\r\nimport cartReducer from './cartSlice';\r\nimport shippingAddressReducers from './shippingSlice';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst rootReducer = combineReducers({\r\n  cart: cartReducer,\r\n  user: userInfoReducers,\r\n  shippingAddress: shippingAddressReducers,\r\n  search: searchReducers,\r\n\r\n  // Add more reducers as needed\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  // Add blacklist or whitelist options if needed\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;;AAEA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,aAAa;AAC1C,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAOC,uBAAuB,MAAM,iBAAiB;AAErD,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,WAAW,GAAGb,eAAe,CAAC;EAClCc,IAAI,EAAEZ,WAAW;EACjBa,IAAI,EAAEd,gBAAgB;EACtBe,eAAe,EAAEb,uBAAuB;EACxCc,MAAM,EAAEC;;EAER;AACF,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXR;EACA;AACF,CAAC;AAED,MAAMS,gBAAgB,GAAGhB,cAAc,CAACc,aAAa,EAAEN,WAAW,CAAC;AAEnE,MAAMS,KAAK,GAAGvB,cAAc,CAAC;EAC3BwB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACrB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMiB,SAAS,GAAGxB,YAAY,CAACkB,KAAK,CAAC;AAE5C,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}