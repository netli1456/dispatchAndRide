{"ast":null,"code":"// store.js\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport seaarchedProducts from './productsSearch';\nimport cartReducer from './cartSlice';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst rootReducer = combineReducers({\n  cart: cartReducer\n\n  // Add more reducers as needed\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n  // Add blacklist or whitelist options if needed\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","seaarchedProducts","cartReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","rootReducer","cart","persistConfig","key","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/Users/NoPassword/Desktop/dispatchAndEatery/client/src/redux/store.js"],"sourcesContent":["// store.js\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport seaarchedProducts from './productsSearch';\r\nimport cartReducer from './cartSlice';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n   cart:cartReducer\r\n  \r\n  // Add more reducers as needed\r\n});\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    // Add blacklist or whitelist options if needed\r\n  };\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;;AAEA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,eAAe,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,kBAAkB;AAChD,OAAOC,WAAW,MAAM,aAAa;AACrC,SACIC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACxB,OAAOC,OAAO,MAAM,2BAA2B;AAG/C,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EACjCa,IAAI,EAACX;;EAEN;AACF,CAAC,CAAC;AAEF,MAAMY,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXJ;EACA;AACF,CAAC;AAED,MAAMK,gBAAgB,GAAGZ,cAAc,CAACU,aAAa,EAAEF,WAAW,CAAC;AAErE,MAAMK,KAAK,GAAGlB,cAAc,CAAC;EAC3BmB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IACjCA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACjB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAMa,SAAS,GAAGpB,YAAY,CAACc,KAAK,CAAC;AAE5C,eAAeA,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}